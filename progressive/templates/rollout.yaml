{{- $instance := include "progressive.fullname" . -}}

{{- if .Values.enableArgoRollouts }}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
{{- else }}
apiVersion: apps/v1
kind: Deployment
{{- end }}
metadata:
  name: {{ $instance }}
  labels:
    {{- include "progressive.labels" . | nindent 4 }}
  annotations:
    secret.reloader.stakater.com/reload: {{ $instance }}
spec:
{{- if .Values.enableArgoRollouts }}
  strategy:
    canary:
      dynamicStableScale: true
      trafficRouting:
        istio:
          virtualService:
            name: {{ $instance }}
            routes:
            - {{ $instance }}
          destinationRule:
            name: {{ $instance }}
            canarySubsetName: canary
            stableSubsetName: stable
      steps:
      - setWeight: 25
      - pause:
          duration: 2m
      - setWeight: 50
      - pause:
          duration: 2m
      - setWeight: 75
      - pause:
          duration: 2m
      analysis:
        templates:
        - templateName: {{ $instance }}
        startingStep: 1
        args:
        - name: service
          value: {{ $instance }}.{{ .Release.Namespace }}.svc.cluster.local
{{- end }}
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: {{ $instance }}
      version: rolling
  template:
    metadata:
      labels:
        app: {{ $instance }}
        version: rolling
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: client
        image: "{{ .Values.client.image.repository }}:{{ .Values.client.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.client.image.pullPolicy }}
        command: ["/bin/bash", "-c", "while true; do curl -v -m 5 http://$BACKEND_SERVICE/; sleep 1; done"]
        env:
        - name: BACKEND_SERVICE
          value: {{ $instance }}
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 33
          runAsGroup: 33
          capabilities:
            drop:
            - ALL
        {{- with .Values.client.resources }}
        resources:
        {{- toYaml . | nindent 10 }}
        {{- end }}
      - name: progressive
        image: "{{ .Values.service.image.repository }}:{{ .Values.service.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.service.image.pullPolicy }}
        ports:
        - name: progressive
          containerPort: 8080
        env:
        - name: WEBAPP_PORT
          value: "8080"
        {{- range $v := .Values.eso.secrets }}
        - name: {{ upper $v.secretKey | replace "-" "_" }}
          valueFrom:
            secretKeyRef:
              name: {{ $instance }}
              key: {{ $v.secretKey }}
        {{- end }}
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
          httpGet:
            path: /
            port: progressive
        readinessProbe:
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
          httpGet:
            path: /
            port: progressive
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 33
          runAsGroup: 33
          capabilities:
            drop:
            - ALL
        {{- with .Values.service.resources }}
        resources:
        {{- toYaml . | nindent 10 }}
        {{- end }}
